head	1.5;
access;
symbols
	response:1.4;
locks; strict;
comment	@ * @;


1.5
date	2012.10.09.03.57.19;	author sgliske;	state dead;
branches;
next	1.4;

1.4
date	2011.11.18.01.47.54;	author sgliske;	state Exp;
branches;
next	1.3;

1.3
date	2011.11.18.01.47.03;	author sgliske;	state dead;
branches;
next	1.2;

1.2
date	2011.11.11.04.15.36;	author sgliske;	state Exp;
branches;
next	1.1;

1.1
date	2011.11.10.23.33.33;	author sgliske;	state Exp;
branches;
next	;


desc
@@


1.5
log
@removed unused makers
@
text
@/*!
 *
 * \class StEEmcAnlSplitHitEigen_t
 * \author Stephen Gliske <sgliske@@anl.gov>
 *
 * Split hits based on max eigenvalue of covariance matrix of
 * intersections of strips from various layers.
 *
 */

#ifndef _EEMC_ANL_SPLIT_HIT_EIGEN_H
#define _EEMC_ANL_SPLIT_HIT_EIGEN_H

#include "Stypes.h"
#include "AnlEMPoint.h"
#include "StEEmcAnlSplitHitAlgo.h"
class StEEmcAnlHit_t;


// the class
class StEEmcAnlSplitHitEigen_t : public StEEmcAnlSplitHitAlgo_t {
 public:
   /// Construtor, deconstructor
   StEEmcAnlSplitHitEigen_t();
   virtual ~StEEmcAnlSplitHitEigen_t();

   // default copy constructor, eq. op. OK

   /// Initialize
   virtual Int_t Init();

   /// Find all the hits
   virtual Int_t splitHit( const StEEmcAnlHit_t& hit, Bool_t& doSplit, Bool_t& doInvalidate, AnlEMPoint_t& point1, AnlEMPoint_t& point2 );

   // modifier
   void setMaxEigenvalue( Float_t val ){ mMaxEigenvalue = val; };

 protected:
   Float_t mMaxEigenvalue;

   // inner and outer radius, so do not have to compute every event
   Float_t mInnerRsq, mOuterRsq;

   void getIntersectingPointSet( const StEEmcAnlHit_t& hit, AnlEMPointVec_t& pointVec, AnlEMPoint_t& mean );

 private:
   ClassDef( StEEmcAnlSplitHitEigen_t, 1 );
};

#endif

/*
 * $Id: StEEmcAnlSplitHitEigen.h,v 1.4 2011/11/18 01:47:54 sgliske Exp $
 *
 * $Log: StEEmcAnlSplitHitEigen.h,v $
 * Revision 1.4  2011/11/18 01:47:54  sgliske
 * today
 *
 * Revision 1.2  2011/11/11 04:15:36  sgliske
 * update: it compiles!
 *
 * Revision 1.1  2011/11/10 23:33:33  sgliske
 * Re-arranged hit splitting & added new base class and algos
 *
 * 
 */
@


1.4
log
@today
@
text
@d53 1
a53 1
 * $Id: StEEmcAnlSplitHitEigen.h,v 1.2 2011/11/11 04:15:36 sgliske Exp $
d56 3
@


1.3
log
@today
@
text
@d16 1
a18 1
#include "StEEmcAnlSplitHitAlgo.h"
@


1.2
log
@update: it compiles!
@
text
@d53 1
a53 1
 * $Id: StEEmcAnlSplitHitEigen.h,v 1.1 2011/11/10 23:33:33 sgliske Exp $
d56 3
@


1.1
log
@Re-arranged hit splitting & added new base class and algos
@
text
@d33 1
a33 1
   virtual Int_t splitHit( const StEEmcAnlHit_t& hit, Bool_t& doSplit, AnlEMPoint_t& point1, AnlEMPoint_t& point2 );
d53 5
a57 1
 * $Id: $
a58 1
 * $Log: $
@

