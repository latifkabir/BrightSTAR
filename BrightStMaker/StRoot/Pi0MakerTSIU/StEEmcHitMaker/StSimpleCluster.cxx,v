head	1.7;
access;
symbols
	response:1.6;
locks; strict;
comment	@// @;


1.7
date	2012.11.26.19.40.36;	author sgliske;	state dead;
branches;
next	1.6;

1.6
date	2011.12.13.21.32.27;	author sgliske;	state Exp;
branches;
next	1.5;

1.5
date	2011.12.09.18.01.26;	author sgliske;	state Exp;
branches;
next	1.4;

1.4
date	2011.08.03.22.16.53;	author sgliske;	state Exp;
branches;
next	1.3;

1.3
date	2011.07.22.16.33.06;	author sgliske;	state Exp;
branches;
next	1.2;

1.2
date	2011.07.20.21.35.26;	author sgliske;	state Exp;
branches;
next	1.1;

1.1
date	2011.07.05.21.48.19;	author sgliske;	state Exp;
branches;
next	;


desc
@@


1.7
log
@moved to official StEEmcPool
@
text
@/*!
 *
 * \class StSimpleCluster_t
 * \author Stephen Gliske <sgliske@@anl.gov>
 *
 * See header file.
 */

//#include <iostream>
#include "StSimpleCluster.h"

StSimpleCluster_t& StSimpleCluster_t::operator+=( const StSimpleCluster_t& other ){
//    std::cout << "Merging" << std::endl;
//    std::cout << "\t" << *this << std::endl;
//    std::cout << "\t" << other << std::endl;
//    std::cout << "Old seeds " << mSeedIdx << ' ' << other.mSeedIdx << " old sizes " << mMember.GetSize() << ' ' << other.mMember.GetSize() << std::endl;

   if( other.mE > mE ){
      mID = other.mID;
      mSeedIdx = other.mSeedIdx + mMember.GetSize();
   };
   mMeanX = other.mE*other.mMeanX + mE*mMeanX;
   mMeanY = other.mE*other.mMeanY + mE*mMeanY;

   mE += other.mE;
   if( mE ){
      mMeanX /= mE;
      mMeanY /= mE;
   };
   Int_t oldSize = mMember.GetSize();
   Int_t newSize = oldSize + other.mMember.GetSize();
   mMember.Set( newSize );
   for( Int_t i = oldSize, j = 0; i < newSize; ++i, ++j )
      mMember[i] = other.mMember[j];

   oldSize = mWeight.GetSize();
   newSize = oldSize + other.mWeight.GetSize();
   mWeight.Set( newSize );
   for( Int_t i = oldSize, j = 0; i < newSize; ++i, ++j )
      mWeight[i] = other.mWeight[j];

//    std::cout << "Merged: " << *this << std::endl;

   return *this;
};

std::ostream &operator<<( std::ostream &out, const StSimpleCluster_t &clus ){
   out << "clus " << clus.mID << ", E = " << clus.mE << ", nMember = " << clus.mMember.GetSize() << ", " << clus.mWeight.GetSize();
   out << ", seed at " << clus.mSeedIdx << ", with idx " << clus.getSeedMember() << " X = " << clus.mMeanX;
   return out;
};

ClassImp(StSimpleCluster_t);

/*
 * $Id: StSimpleCluster.cxx,v 1.6 2011/12/13 21:32:27 sgliske Exp $
 *
 * $Log: StSimpleCluster.cxx,v $
 * Revision 1.6  2011/12/13 21:32:27  sgliske
 * Bug fix: now ensure clusters have unique IDs across sectors and layers.
 * Otherwise, StMcHitMakerStrips has errors.
 * Few other small updates also included in this checkin.
 *
 * Revision 1.5  2011/12/09 18:01:26  sgliske
 * update
 *
 * Revision 1.4  2011/08/03 22:16:53  sgliske
 * still debugging
 *
 * Revision 1.3  2011/07/22 16:33:06  sgliske
 * update
 *
 *
 */
@


1.6
log
@Bug fix: now ensure clusters have unique IDs across sectors and layers.
Otherwise, StMcHitMakerStrips has errors.
Few other small updates also included in this checkin.
@
text
@d56 1
a56 1
 * $Id: StSimpleCluster.cxx,v 1.5 2011/12/09 18:01:26 sgliske Exp $
d59 5
@


1.5
log
@update
@
text
@d9 1
d13 5
d42 2
d56 1
a56 1
 * $Id: StSimpleCluster.cxx,v 1.4 2011/08/03 22:16:53 sgliske Exp $
d59 3
@


1.4
log
@still debugging
@
text
@d11 28
d41 1
a41 1
   out << ", seed at " << clus.mSeedIdx << ", with idx " << clus.getSeedMember();
d48 1
a48 1
 * $Id: StSimpleCluster.cxx,v 1.3 2011/07/22 16:33:06 sgliske Exp $
d51 3
@


1.3
log
@update
@
text
@a16 1

d20 5
a24 1
 * $Id: $
a25 1
 * $Log: $
@


1.2
log
@update
@
text
@a4 2
 * $Id: 
 * $Log:
d6 1
a6 1
 * Root stuff for the class.  See the header file.
d19 7
@


1.1
log
@split from StEEmcAnalysisTreeMaker
@
text
@d13 7
@

