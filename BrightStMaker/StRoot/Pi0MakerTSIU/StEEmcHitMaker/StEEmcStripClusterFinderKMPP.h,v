head	1.3;
access;
symbols
	response:1.2;
locks; strict;
comment	@ * @;


1.3
date	2012.10.09.03.57.20;	author sgliske;	state dead;
branches;
next	1.2;

1.2
date	2011.12.07.05.39.06;	author sgliske;	state Exp;
branches;
next	1.1;

1.1
date	2011.12.06.22.36.35;	author sgliske;	state Exp;
branches;
next	;


desc
@@


1.3
log
@removed unused makers
@
text
@/*!
 * \class StEEmcStripClusterFinderKMPP_t
 * \author Stephen Gliske <sgliske@@anl.gov>
 *
 * Use k-means++ algorithm as developed by David Arthur.  This class
 * generated a number of uniformly weighted samples based on the
 * distribution of the stir energies, and then calls the functions of
 * David Arther, taken from
 *
 * http://www.stanford.edu/~darthur/kmpp.zip
 *
*/

#ifndef _ST_STRIP_CLUSTER_FINDER_KMPP_H_
#define _ST_STRIP_CLUSTER_FINDER_MKPP_H_

#include <TRandom3.h>

#include "StRoot/StEEmcPool/StEEmcA2EMaker/StEEmcStrip.h"
#include "StRoot/StEEmcUtil/EEmcGeom/EEmcGeomDefs.h"

#include "StEEmcStripClusterFinder.h"


class StEEmcStripClusterFinderKMPP_t : public StEEmcStripClusterFinder_t {

 public:
   StEEmcStripClusterFinderKMPP_t( Int_t numDataPts = 1000 );
   virtual ~StEEmcStripClusterFinderKMPP_t();

   /// find some clusters
   virtual Int_t find( const StEEmcStripVec_t& hitStrips, StSimpleClusterVec_t& cluster );

   void setMaxNumClusters( Int_t val ){ mMaxNumClusters = val; };
   void setMinNumStripsPerCluster( Int_t val ){ mMaxNumClusters = val; };
   void setNumAttemptsPerNumClusters( Int_t val ){ mAttemptsPerNumClusters = val; };

 protected:
   TRandom3 rand;
   Int_t mNumDataPoints;
   Int_t mMinNumClusters, mMaxNumClusters, mMinStripsPerCluster, mAttemptsPerNumClusters;

   enum { kMaxNumClusters = 10 };

   Double_t *mData;
   Int_t *mAssignmentsA, *mAssignmentsB;
   Double_t mCDF[kEEmcNumStrips+1], mStripEnergyArray[kEEmcNumStrips];

   Double_t mCentersA[kMaxNumClusters], mCentersB[kMaxNumClusters];
   Double_t mCounts[kMaxNumClusters][kEEmcNumStrips];

   Double_t findPosition( Double_t energy );

 private:
   ClassDef( StEEmcStripClusterFinderKMPP_t, 1 );
};


#endif

/*
 * $Id: StEEmcStripClusterFinderKMPP.h,v 1.2 2011/12/07 05:39:06 sgliske Exp $
 * $Log: StEEmcStripClusterFinderKMPP.h,v $
 * Revision 1.2  2011/12/07 05:39:06  sgliske
 * update
 *
 * Revision 1.1  2011/12/06 22:36:35  sgliske
 * update
 *
 *
 */
@


1.2
log
@update
@
text
@d62 1
a62 1
 * $Id: StEEmcStripClusterFinderKMPP.h,v 1.1 2011/12/06 22:36:35 sgliske Exp $
d64 3
@


1.1
log
@update
@
text
@d17 5
d24 1
d34 4
d41 2
a42 3
   Int_t mMinNumClusters, mMaxNumClusters;
   Double_t mData;
   Double_t mCDF[kEEmcNumStrips+1];
d44 5
d50 3
a52 1
   Double_t *mAssignmentsA, *mAssigmentsB;
d62 5
a66 2
 * $Id:  $
 * $Log: $
@

