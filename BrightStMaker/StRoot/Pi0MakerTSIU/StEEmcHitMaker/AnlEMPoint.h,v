head	1.4;
access;
symbols
	response:1.3;
locks; strict;
comment	@ * @;


1.4
date	2012.10.09.03.57.19;	author sgliske;	state dead;
branches;
next	1.3;

1.3
date	2011.11.11.21.28.08;	author sgliske;	state Exp;
branches;
next	1.2;

1.2
date	2011.11.10.23.33.33;	author sgliske;	state Exp;
branches;
next	1.1;

1.1
date	2011.10.26.21.38.12;	author sgliske;	state Exp;
branches;
next	;


desc
@@


1.4
log
@removed unused makers
@
text
@/*!
 *
 * \class StEEmcAnlEMPoint_h
 * \author Stephen Gliske <sgliske@@anl.gov>
 *
 * A structure used in the StEEmcHitMakerAnlEM_t class to keep track of points with weights.
 *
 */

#ifndef _EEMC_ANL_EM_POINT_H_
#define _EEMC_ANL_EM_POINT_H_

#include <vector>
#include <set>

class AnlEMPoint_t;

typedef std::vector< AnlEMPoint_t > AnlEMPointVec_t;
typedef std::set< AnlEMPoint_t > AnlEMPointSet_t;

// class for points
class AnlEMPoint_t {
 private:
   Float_t mW, mX, mY;

 public:
   AnlEMPoint_t() : mW(1), mX(0), mY(0) { /* */ };
   AnlEMPoint_t( Float_t w, Float_t x, Float_t y ) : mW(w), mX(x), mY(y) { /* */ };

   Bool_t operator<( const AnlEMPoint_t& rhs ) const { return ( (mX==rhs.mX) ? (mY<rhs.mY) : (mX<rhs.mX) ); };
   static Bool_t energyLessThan( const AnlEMPoint_t& lhs, const AnlEMPoint_t& rhs ){ return lhs.mW < lhs.mW; };

   Float_t& W(){ return mW; };
   Float_t& X(){ return mX; };
   Float_t& Y(){ return mY; };
};

#endif

/*
 * $Id: AnlEMPoint.h,v 1.3 2011/11/11 21:28:08 sgliske Exp $
 *
 * $Log: AnlEMPoint.h,v $
 * Revision 1.3  2011/11/11 21:28:08  sgliske
 * daily update
 *
 * Revision 1.2  2011/11/10 23:33:33  sgliske
 * Re-arranged hit splitting & added new base class and algos
 *
 * Revision 1.1  2011/10/26 21:38:12  sgliske
 * creation
 *
 * 
 */
@


1.3
log
@daily update
@
text
@d41 1
a41 1
 * $Id: AnlEMPoint.h,v 1.2 2011/11/10 23:33:33 sgliske Exp $
d44 3
@


1.2
log
@Re-arranged hit splitting & added new base class and algos
@
text
@d14 1
d19 1
d30 3
d41 1
a41 1
 * $Id: AnlEMPoint.h,v 1.1 2011/10/26 21:38:12 sgliske Exp $
d44 3
@


1.1
log
@creation
@
text
@d25 1
d36 5
a40 1
 * $Id: $
a41 1
 * $Log: $
@

