head	1.3;
access;
symbols
	response:1.2;
locks; strict;
comment	@ * @;


1.3
date	2012.10.09.03.57.20;	author sgliske;	state dead;
branches;
next	1.2;

1.2
date	2011.12.08.15.43.02;	author sgliske;	state Exp;
branches;
next	1.1;

1.1
date	2011.12.07.22.33.11;	author sgliske;	state Exp;
branches;
next	;


desc
@@


1.3
log
@removed unused makers
@
text
@/*!
 * \class StEEmcStripClusterFinderGMM_t
 * \author Stephen Gliske <sgliske@@anl.gov>
 *
 * Use GMM with the AIC criterea for picking the number of clusters.
 *
*/

#ifndef _ST_STRIP_CLUSTER_FINDER_GMM_H_
#define _ST_STRIP_CLUSTER_FINDER_GMM_H_

#include <TRandom3.h>
#include <TSpectrum.h>

#include "StRoot/StEEmcPool/StEEmcA2EMaker/StEEmcStrip.h"
#include "StRoot/StEEmcUtil/EEmcGeom/EEmcGeomDefs.h"

#include "StEEmcStripClusterFinder.h"
#include "GmmEm1D/GmmEm1D.h"

class StEEmcStripClusterFinderGMM_t : public StEEmcStripClusterFinder_t {

 public:
   StEEmcStripClusterFinderGMM_t( Int_t numDataPts = 1000 );
   virtual ~StEEmcStripClusterFinderGMM_t();

   /// find some clusters
   virtual Int_t find( const StEEmcStripVec_t& hitStrips, StSimpleClusterVec_t& cluster );

   void setMaxNumClusters( Int_t val ){ mMaxNumClusters = val; };
   void setMinNumStripsPerCluster( Int_t val ){ mMinStripsPerCluster = val; };
   void setNumAttemptsPerNumClusters( Int_t val ){ mAttemptsPerNumClusters = val; };
   void setMinSeedEnergy( Float_t val ){ mMinSeedEnergy = val; };
   void setInitSigma( Float_t val ){ mInitSigmaSq = val*val; };
   void setMinimumAmplitudeFrac( Float_t val ){ mMinimumAmp = val; };
   void setMinStripWeight( Float_t val ){ mMinStripWeight = val; };
   void setAICfactor( Float_t val ){ mAICfactor = val; };
   void setMinSigma( Float_t val ){ mMinSigmaSq = val*val; };

 protected:
   Int_t mMinNumClusters, mMaxNumClusters, mMinStripsPerCluster, mAttemptsPerNumClusters;
   Float_t mMinSeedEnergy, mInitSigmaSq, mMinimumAmp, mMinStripWeight, mAICfactor, mMinSigmaSq;

   GmmEm1D_t mGmmEm;
   TRandom3 rand;

 private:
   ClassDef( StEEmcStripClusterFinderGMM_t, 1 );
};


#endif

/*
 * $Id: StEEmcStripClusterFinderGMM.h,v 1.2 2011/12/08 15:43:02 sgliske Exp $
 * $Log: StEEmcStripClusterFinderGMM.h,v $
 * Revision 1.2  2011/12/08 15:43:02  sgliske
 * update
 *
 *
 */
@


1.2
log
@update
@
text
@d55 5
a59 2
 * $Id: $
 * $Log: $
@


1.1
log
@update
@
text
@d13 1
d19 1
a19 1

d31 1
a31 1
   void setMinNumStripsPerCluster( Int_t val ){ mMaxNumClusters = val; };
d33 6
d41 4
a45 2
   Int_t mMinNumClusters, mMaxNumClusters, mMinStripsPerCluster, mAttemptsPerNumClusters;
   Float_t mMinSeedEnergy;
@

