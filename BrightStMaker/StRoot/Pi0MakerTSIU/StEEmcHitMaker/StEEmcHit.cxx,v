head	1.5;
access;
symbols
	response:1.4;
locks; strict;
comment	@// @;


1.5
date	2012.11.26.19.40.33;	author sgliske;	state dead;
branches;
next	1.4;

1.4
date	2011.08.09.20.36.09;	author sgliske;	state Exp;
branches;
next	1.3;

1.3
date	2011.07.21.21.17.37;	author sgliske;	state Exp;
branches;
next	1.2;

1.2
date	2011.07.20.21.35.26;	author sgliske;	state Exp;
branches;
next	1.1;

1.1
date	2011.07.05.21.48.19;	author sgliske;	state Exp;
branches;
next	;


desc
@@


1.5
log
@moved to official StEEmcPool
@
text
@/*!
 *
 * \class StEEmcHit_t
 * \author Stephen Gliske <sgliske@@anl.gov>
 *
 * Root stuff for the class.  See the header file.
 */

#include "StEEmcHit.h"

void StEEmcHit_t::setNumUsedTowers( UInt_t n ){
   mUsedTowerIndices.Set( n );
   mUsedTowerWeights.Set( n );
};

void StEEmcHit_t::addUsedTower( Int_t localIndex, Short_t towIndex, Float_t weight ){
   if( localIndex <= mUsedTowerIndices.GetSize() && localIndex <= mUsedTowerWeights.GetSize() && localIndex > -1 ){
      mUsedTowerIndices[ localIndex ] = towIndex;
      mUsedTowerWeights[ localIndex ] = weight;
   };
};

void StEEmcHit_t::setUsedTowers( std::vector< Short_t >& usedIndices, std::vector< Float_t >& weights ){
   UInt_t n = usedIndices.size();
   UInt_t n2 = weights.size();

   // if different sizes, just copy as many as both are valid
   if( n2 < n )
      n = n2;

   mUsedTowerIndices.Set( n );
   mUsedTowerWeights.Set( n );


   for( UInt_t i = 0; i<n; ++i ){
      mUsedTowerIndices[ i ] = usedIndices[i];
      mUsedTowerWeights[ i ] = weights[i];
   };
};


std::ostream &operator<<( std::ostream &out, const StEEmcHit_t &hit ){
   out << *static_cast< const StSimpleHit_t* >( &hit ) << ", sec = ";
   out << hit.getSector() << ", u ";
   out << hit.getClusIDu() << ' ';
   out << hit.getEnergyU() << ' ';
   out << hit.getWeightU() << ", v ";
   out << hit.getClusIDv() << ' ';
   out << hit.getEnergyV() << ' ';
   out << hit.getWeightV() << ", tow ";
   out << hit.getTowerIdx() << ", ttest ";
   out << hit.getTtest2();

   return out;
};

ClassImp(StEEmcHit_t);

/*
 * $Id: StEEmcHit.cxx,v 1.4 2011/08/09 20:36:09 sgliske Exp $
 * $Log: StEEmcHit.cxx,v $
 * Revision 1.4  2011/08/09 20:36:09  sgliske
 * working on adding MC support to AnalysisTreeMaker
 *
 *
 */
@


1.4
log
@working on adding MC support to AnalysisTreeMaker
@
text
@d60 5
a64 2
 * $Id: $
 * $Log: $
@


1.3
log
@update
@
text
@a4 2
 * $Id: 
 * $Log:
d11 31
d58 6
@


1.2
log
@update
@
text
@d24 2
@


1.1
log
@split from StEEmcAnalysisTreeMaker
@
text
@d13 13
@

