head	1.3;
access;
symbols
	response:1.2;
locks; strict;
comment	@ * @;


1.3
date	2012.10.09.03.57.20;	author sgliske;	state dead;
branches;
next	1.2;

1.2
date	2012.03.07.22.30.46;	author sgliske;	state Exp;
branches;
next	1.1;

1.1
date	2012.03.02.19.04.59;	author sgliske;	state Exp;
branches;
next	;


desc
@creation
@


1.3
log
@removed unused makers
@
text
@/*!
 * \class StEEmcStripClusterFinderNH2_t
 * \author Stephen Gliske <sgliske@@anl.gov>
 *
 * NH2 method: Seeds required to be mMinSeedDist apart and above
 * mSeedEnergyThres in energy.  Strips farther than mMaxDist from the
 * seed strip are ignored. Clusters required to have
 * mMinStripsPerCluster non-zero strips in the cluster and be above
 * mMinClusterEnergy.
 *
*/

//#define MAKE_HISTS

#ifndef _ST_STRIP_CLUSTER_FINDER_NH2_H_
#define _ST_STRIP_CLUSTER_FINDER_NH2_H_

#include <TH2F.h>

#include "StRoot/StEEmcPool/StEEmcA2EMaker/StEEmcStrip.h"
#include "StRoot/StEEmcUtil/EEmcGeom/EEmcGeomDefs.h"

#include "StEEmcStripClusterFinder.h"

class StEEmcStripClusterFinderNH2_t : public StEEmcStripClusterFinder_t {

 public:
   StEEmcStripClusterFinderNH2_t( );
   virtual ~StEEmcStripClusterFinderNH2_t();

   /// find some clusters
   virtual Int_t find( const StEEmcStripVec_t& hitStrips, StSimpleClusterVec_t& cluster );

   void setMinStripsPerCluster( Int_t val ){ mMinStripsPerCluster = val; };
   void setMinSeedDist( Int_t val ){ mMinSeedDist = val; };
   void setWindowDist( Int_t val ){ mWindowDist = val; };
   void setSeedEnergyThres( Float_t val ){ mSeedEnergyThres = val; };
   void setMinClusterEnergy( Float_t val ){ mMinClusterEnergy = val; };
   void setMeanDistThres( Float_t val ){ mMeanDistThres = val; };
   void setAveragingWindowFactor( Float_t val ){ mAveWinFact = val; };

 protected:
   // parameters
   Int_t mMinStripsPerCluster, mMinSeedDist, mWindowDist;
   Float_t mSeedEnergyThres, mMinClusterEnergy, mMeanDistThres, mAveWinFact, mShapeFactor;

   // temp storage
   Float_t mStripEnergyArray[ kEEmcNumStrips ];
   TH2F *mHist2D;

   void addCluster( Int_t lowIdx, Int_t highIdx, Int_t seedIdx, Int_t aveWindow, StSimpleClusterVec_t& clustersOut );

#ifdef MAKE_HISTS
   TFile *mTFile;
   Int_t mHistNum;
   TH1F *mRatioHist, *mMeanHist, *mRmsHist, *mMeanMinusMpvHist, *mMpvHist, *mIntHist, *mPeak, *mMaxPeak;
#endif

 private:
   ClassDef( StEEmcStripClusterFinderNH2_t, 1 );
};


#endif

/*
 * $Id: StEEmcStripClusterFinderNH2.h,v 1.2 2012/03/07 22:30:46 sgliske Exp $
 * $Log: StEEmcStripClusterFinderNH2.h,v $
 * Revision 1.2  2012/03/07 22:30:46  sgliske
 * general updates
 *
 * Revision 1.1  2012/03/02 19:04:59  sgliske
 * creation
 *
 *
 */
@


1.2
log
@general updates
@
text
@d67 1
a67 1
 * $Id: StEEmcStripClusterFinderNH2.h,v 1.1 2012/03/02 19:04:59 sgliske Exp $
d69 3
@


1.1
log
@creation
@
text
@d13 2
d18 1
a18 2
#include <TRandom3.h>
#include <TSpectrum.h>
d45 1
a45 1
   Float_t mSeedEnergyThres, mMinClusterEnergy, mMeanDistThres, mAveWinFact;
d51 8
d67 5
a71 2
 * $Id: $
 * $Log: $
@

