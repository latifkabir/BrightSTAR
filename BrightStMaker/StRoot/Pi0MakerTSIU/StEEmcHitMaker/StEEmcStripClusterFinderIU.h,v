head	1.8;
access;
symbols
	response:1.5;
locks; strict;
comment	@ * @;


1.8
date	2012.11.26.19.40.35;	author sgliske;	state dead;
branches;
next	1.7;

1.7
date	2012.05.18.22.12.30;	author sgliske;	state Exp;
branches;
next	1.6;

1.6
date	2012.05.17.22.47.02;	author sgliske;	state Exp;
branches;
next	1.5;

1.5
date	2011.10.26.21.37.35;	author sgliske;	state Exp;
branches;
next	1.4;

1.4
date	2011.08.02.16.52.02;	author sgliske;	state Exp;
branches;
next	1.3;

1.3
date	2011.07.20.21.35.26;	author sgliske;	state Exp;
branches;
next	1.2;

1.2
date	2011.07.11.15.14.31;	author sgliske;	state Exp;
branches;
next	1.1;

1.1
date	2011.07.05.21.48.19;	author sgliske;	state Exp;
branches;
next	;


desc
@@


1.8
log
@moved to official StEEmcPool
@
text
@/*!
 * \class StripClusterFinderIU_t
 * \author Stephen Gliske <sgliske@@anl.gov>
 *
 * The method used in the dissertation of Weighong He's.  This
 * implementation produces the same results as
 * StEEmcIUClusterMaker::buildSmdClusters(), but includes several
 * improvements in the implementation
 *
 * One significant change in the implementation exists: whereas the
 * StEEmcIUClusterMaker implementation prevents a strip from being a
 * seed if it is already a member of another cluster, this
 * implementation instead allows one to ensure that the seeds are at
 * least a minimum number of strips apart.  Setting
 *
 * "mMinSeedDistance = maxExtent"
 *
 * yeilds the same result as the StEEmcIUClusterMaker implementation.
 *
 */

#ifndef _ST_STRIP_CLUSTER_FINDER_IU_H_
#define _ST_STRIP_CLUSTER_FINDER_IU_H_

#include <Rtypes.h>

#include "StRoot/StEEmcUtil/EEmcGeom/EEmcGeomDefs.h"

#include "StSimpleCluster.h"
#include "StEEmcStripClusterFinder.h"
class EEmcElement_t;

class StEEmcStripClusterFinderIU_t : public StEEmcStripClusterFinder_t {

 public:
   StEEmcStripClusterFinderIU_t();
   virtual ~StEEmcStripClusterFinderIU_t() { /* */ };

   /// clear between events
   virtual void clear();

   /// find some clusters
   virtual Int_t find( const ESmdLayer_t& smdLayer, StSimpleClusterVec_t& cluster );

   // modifiers
   void setIgnoreCorners( Bool_t ignore = true ){ mIgnoreCorners = ignore; };
   void setUseNaiveFloorShape( Bool_t useNaive = true ){ mUseNaiveFloorShape = useNaive; };
   void setApplyClusterSplitting( Bool_t apply = true ){ mApplyClusterSplitting = apply; };
   void setMaxExtent( Int_t maxExtent );
   void setMinStripsPerCluster( Int_t min_strips );
   void setMinSeedDistance( Int_t min ){ mMinSeedDistance = min; };
   void setSeedFloorConst( Float_t seedFloor ){ mSeedFloor = seedFloor; };
   void setSeedEnergyThres( LayerOfSMD_t layer, Float_t thres ){ mSeedEnergyThres[ layer ] = thres; };

 protected:
   // variables for user options
   Bool_t mIgnoreCorners;
   Bool_t mUseNaiveFloorShape;
   Bool_t mApplyClusterSplitting;
   Int_t mMaxExtent;
   Int_t mMinStripsPerCluster;
   Int_t mMinSeedDistance;
   Float_t mSeedFloor;
   Float_t mSeedEnergyThres[2];

   // variable internal to the class
   Bool_t mNeedsToBeCleared;
   Float_t mSeedFloorArray[ kEEmcNumStrips ];
   Int_t mFirstClusterIDForEachStrip[ kEEmcNumStrips ];
   Int_t mClosestClusterIDForEachStrip[ kEEmcNumStrips ];

   // for sorting
   static Bool_t energyGreaterThan( const EEmcElement_t *s1, const EEmcElement_t *s2 );

 private:
   ClassDef( StEEmcStripClusterFinderIU_t, 1 );

};

#endif

// $Id: StEEmcStripClusterFinderIU.h,v 1.7 2012/05/18 22:12:30 sgliske Exp $
//
// $Log: StEEmcStripClusterFinderIU.h,v $
// Revision 1.7  2012/05/18 22:12:30  sgliske
// switched to EEmcTree containers
//
// Revision 1.6  2012/05/17 22:47:02  sgliske
// working on switching to EEmcTree containers
//
// Revision 1.5  2011/10/26 21:37:35  sgliske
// Working on ANL EM Algo
//
// Revision 1.4  2011/08/02 16:52:02  sgliske
// debugging
//
// Revision 1.3  2011/07/20 21:35:26  sgliske
// update
//
// Revision 1.2  2011/07/11 15:14:31  sgliske
// before making StHitData class
//
// Revision 1.1  2011/07/05 21:48:19  sgliske
// split from StEEmcAnalysisTreeMaker
//
// Revision 1.1  2011/06/23 21:55:05  sgliske
// daily update
//
// S. Gliske, last updated June, 2011
@


1.7
log
@switched to EEmcTree containers
@
text
@d82 1
a82 1
// $Id: StEEmcStripClusterFinderIU.h,v 1.6 2012/05/17 22:47:02 sgliske Exp $
d85 3
@


1.6
log
@working on switching to EEmcTree containers
@
text
@d31 1
d82 1
a82 1
// $Id: StEEmcStripClusterFinderIU.h,v 1.5 2011/10/26 21:37:35 sgliske Exp $
d85 3
@


1.5
log
@Working on ANL EM Algo
@
text
@a26 1
#include "StRoot/StEEmcPool/StEEmcA2EMaker/StEEmcStrip.h"
d42 1
a42 1
   virtual Int_t find( const StEEmcStripVec_t& mHitStrip, StSimpleClusterVec_t& cluster );
a69 1
   StEEmcStrip const *mStripPtrArray[ kEEmcNumStrips ];
d72 1
a72 2
   // static Bool_t energyLessThanPtr( const StEEmcStrip *s1, const StEEmcStrip *s2 );
   static Bool_t energyLessThan( StEEmcStrip s1, StEEmcStrip s2 );
d81 1
a81 1
// $Id: StEEmcStripClusterFinderIU.h,v 1.4 2011/08/02 16:52:02 sgliske Exp $
d84 3
@


1.4
log
@debugging
@
text
@d53 1
a53 3
   void setSeedEnergyThres( LayerOfSMD_t layer, Float_t thres ){
      mSeedEnergyThres[ layer ] = thres;
   };
d84 1
a84 1
// $Id: StEEmcStripClusterFinderIU.h,v 1.3 2011/07/20 21:35:26 sgliske Exp $
d87 3
@


1.3
log
@update
@
text
@d9 11
d47 1
a47 1
   void setUseNaiveFloorShape( Bool_t useNaive = false ){ mUseNaiveFloorShape = useNaive; };
d72 1
d86 1
a86 1
// $Id: StEEmcStripClusterFinderIU.h,v 1.2 2011/07/11 15:14:31 sgliske Exp $
d89 3
@


1.2
log
@before making StHitData class
@
text
@d60 1
a60 1
   StSimpleCluster_t *mFirstClusterForEachStrip[ kEEmcNumStrips ];
d64 2
a65 1
   static Bool_t seedEnergyLessThan( const StEEmcStrip *s1, const StEEmcStrip *s2 );
d74 1
a74 1
// $Id: StEEmcStripClusterFinderIU.h,v 1.1 2011/07/05 21:48:19 sgliske Exp $
d77 3
@


1.1
log
@split from StEEmcAnalysisTreeMaker
@
text
@a0 8
// $Id: StEEmcStripClusterFinderIU.h,v 1.1 2011/06/23 21:55:05 sgliske Exp $
//
// $Log: StEEmcStripClusterFinderIU.h,v $
// Revision 1.1  2011/06/23 21:55:05  sgliske
// daily update
//
// S. Gliske, last updated June, 2011

d66 3
d72 11
@

