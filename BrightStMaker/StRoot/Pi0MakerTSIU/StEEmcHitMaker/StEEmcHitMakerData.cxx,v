head	1.3;
access;
symbols
	response:1.2;
locks; strict;
comment	@// @;


1.3
date	2012.11.26.19.40.34;	author sgliske;	state dead;
branches;
next	1.2;

1.2
date	2011.07.22.16.33.06;	author sgliske;	state Exp;
branches;
next	1.1;

1.1
date	2011.07.12.14.13.16;	author sgliske;	state Exp;
branches;
next	;


desc
@@


1.3
log
@moved to official StEEmcPool
@
text
@/*!
 * \class StEEmcHitMakerData_t
 * \author Stephen Gliske <sgliske@@anl.gov>
 *
 * See description in StEEmcHitMakerData_t.h
 *
*/

/// Includes

#include "StRoot/St_base/StMessMgr.h"
#include "StRoot/St_base/Stypes.h"

#include "StEEmcHitMakerData.h"

/// get reference to clusers from a given layer
StSimpleClusterVec_t& StEEmcHitMakerData_t::getTowerClusterVec( TowerLayer_t layer ) {
   if( layer > NUM_TOW_LAYERS ){
      LOG_FATAL << "StEEmcHitMaker_t::getTowerClusterVec( TowerLayer_t layer ) given invalid layer: " << layer << endm;
      return mTowerClusterVec[ 0 ];
   };
   return mTowerClusterVec[ layer ];
};

void StEEmcHitMakerData_t::clearData(){
   for( Int_t i = 0; i<NUM_TOW_LAYERS; ++i )
      mTowerClusterVec[i].clear();
   mESMDClusterVec.clear();
   mHitVec.clear();

   //LOG_INFO << "SMD clusters now have " << mESMDClusterVec.size() << " clusters" << endm;
};

ClassImp( StEEmcHitMakerData_t );

/*
 * $Id: StEEmcHitMakerData.cxx,v 1.2 2011/07/22 16:33:06 sgliske Exp $
 *
 * $Log: StEEmcHitMakerData.cxx,v $
 * Revision 1.2  2011/07/22 16:33:06  sgliske
 * update
 *
 * Revision 1.1  2011/07/12 14:13:16  sgliske
 * update
 *
 *
 */
@


1.2
log
@update
@
text
@d37 1
a37 1
 * $Id: StEEmcHitMakerData.cxx,v 1.1 2011/07/12 14:13:16 sgliske Exp $
d40 3
@


1.1
log
@update
@
text
@d25 1
a25 1
void StEEmcHitMakerData_t::clear(){
d30 2
d37 5
a41 1
 * $Id: $
a42 1
 * $Log: $
@

