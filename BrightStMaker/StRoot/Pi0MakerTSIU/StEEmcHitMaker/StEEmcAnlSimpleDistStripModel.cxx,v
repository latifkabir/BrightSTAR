head	1.3;
access;
symbols
	response:1.2;
locks; strict;
comment	@// @;


1.3
date	2012.10.09.03.57.19;	author sgliske;	state dead;
branches;
next	1.2;

1.2
date	2011.12.06.22.36.35;	author sgliske;	state Exp;
branches;
next	1.1;

1.1
date	2011.11.11.21.28.16;	author sgliske;	state Exp;
branches;
next	;


desc
@@


1.3
log
@removed unused makers
@
text
@/*!
 *
 * \class StEEmcAnlSimpleDistStripModel_t
 * \author Stephen Gliske <sgliske@@anl.gov>
 *
 * See header for description.
 *
 */

#include "Rtypes.h"
#include "StEEmcAnlShowerShapeModel.h"
#include "StEEmcAnlSimpleDistStripModel.h"
#include "StRoot/St_base/StMessMgr.h"
#include "StRoot/StEEmcPool/StEEmcPointMap/StEEmcPointMap.h"
#include "StRoot/StEEmcPool/StEEmcGeoId/StEEmcGeoId.h"

#include "StEEmcAnlHit.h"
#include "assert.h"

// constructor
StEEmcAnlSimpleDistStripModel_t::StEEmcAnlSimpleDistStripModel_t() : StEEmcAnlNaiveDistStripModel_t() {
   mFactor = 1;
};

// deconstructor
StEEmcAnlSimpleDistStripModel_t::~StEEmcAnlSimpleDistStripModel_t(){ /* */ };

// get energy
Float_t StEEmcAnlSimpleDistStripModel_t::getEnergyFromHitIntoElement( const StEEmcAnlHit_t& hit, Short_t geoId ){
   Float_t factor = mFactor;

   // find sector and layer of the strip
   Short_t sector, strip;
   Bool_t layerIsV;
   StEEmcGeoId_t::decodeSmd( geoId, sector, layerIsV, strip );

   // find factor
   factor = hit.getSpread( sector*2 + layerIsV );
   if( !(factor>0) )
      factor = mFactor;

   // compute distance
   Float_t dca = StEEmcPointMap_t::instance().getStripDCA( hit.getX(), hit.getY(), geoId );

   if( factor )
      dca /= factor;

   return mWeightFunc->Eval( dca );
};

ClassImp( StEEmcAnlSimpleDistStripModel_t );

/*
 * $Id: StEEmcAnlSimpleDistStripModel.cxx,v 1.2 2011/12/06 22:36:35 sgliske Exp $
 * $Log: StEEmcAnlSimpleDistStripModel.cxx,v $
 * Revision 1.2  2011/12/06 22:36:35  sgliske
 * update
 *
 * Revision 1.1  2011/11/11 21:28:16  sgliske
 * daily update
 *
 * 
 */
@


1.2
log
@update
@
text
@d54 1
a54 1
 * $Id: StEEmcAnlSimpleDistStripModel.cxx,v 1.1 2011/11/11 21:28:16 sgliske Exp $
d56 3
@


1.1
log
@daily update
@
text
@d15 1
d21 3
a23 1
StEEmcAnlSimpleDistStripModel_t::StEEmcAnlSimpleDistStripModel_t() : StEEmcAnlNaiveDistStripModel_t(), mWeightFunc(0), mFactor(1) { /* */ };
d28 3
a30 13
/// Initialize
Int_t StEEmcAnlSimpleDistStripModel_t::Init(){
   Int_t ierr = kStOk;

   if( !mWeightFunc ){
      LOG_FATAL << "Pointer to weight function is null" << endm;
      ierr = kStFatal;
   };

   if( !ierr && mWeightFunc->IsZombie() ){
      LOG_FATAL << "Weight function is a zombie" << endm;
      ierr = kStFatal;
   };
d32 9
a40 2
   return ierr;
};
d42 1
a42 2
// get energy
Float_t StEEmcAnlSimpleDistStripModel_t::getEnergyFromHitIntoElement( const StEEmcAnlHit_t& hit, Short_t geoId ){
d45 2
a46 4
   //Short_t hitGeoId = StEEmcPointMap_t::instance().getStripDCA( hit.getX(), hit.getY(), geoId );

   // compute RMS per sector
   assert(1==0); // not yet programmed;
a47 1
   dca /= mFactor;
d54 5
a58 2
 * $Id: $
 * $Log: $
@

