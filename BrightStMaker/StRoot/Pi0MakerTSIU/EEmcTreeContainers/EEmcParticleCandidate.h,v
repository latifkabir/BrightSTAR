head	1.7;
access;
symbols;
locks; strict;
comment	@ * @;


1.7
date	2012.11.26.19.37.32;	author sgliske;	state dead;
branches;
next	1.6;

1.6
date	2012.06.01.21.50.12;	author sgliske;	state Exp;
branches;
next	1.5;

1.5
date	2012.05.25.16.20.16;	author sgliske;	state Exp;
branches;
next	1.4;

1.4
date	2012.05.24.04.33.47;	author sgliske;	state Exp;
branches;
next	1.3;

1.3
date	2012.05.23.19.58.38;	author sgliske;	state Exp;
branches;
next	1.2;

1.2
date	2012.05.22.15.37.16;	author sgliske;	state Exp;
branches;
next	1.1;

1.1
date	2012.05.21.21.08.15;	author sgliske;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Moved to StRoot/StEEmcPool/EEmcTreeContainers
@
text
@/*
 * Created by S. Gliske, May 2012
 *
 * Description: Container used in the EEmcAnalysisTree.  Represents a candidate particle.
 *
 * Note: this does not explicitly depend on the STAR framework, and so
 * the trees can be read outside of the STAR framework.  Note: data
 * members are all public, to allow a lighter weight implementation. from
 * the TTree.
 *
 * While other makers may redefine the interpretation of PID, this
 * class defaults to a value of PID = 1000.
 * 
 */

#ifndef EEmcParticleCandidate_H__
#define EEmcParticleCandidate_H__

#include <Rtypes.h>
#include <TObject.h>
#include <TVector3.h>

class EEmcHit_t;

class EEmcParticleCandidate_t : public TObject {

 public:
   // constructor
   EEmcParticleCandidate_t();
   EEmcParticleCandidate_t( Int_t hitIdx_, const EEmcHit_t& hit, TVector3& vertex );

   // default equals operator and copy constructor OK

   Int_t PID, hitIdx1;
   Float_t E, M, PT;
   TVector3 position;  // where it hits the endcap
   TVector3 momentum;  // in the direction from primary vertex to the position

 private:
   ClassDef( EEmcParticleCandidate_t, 1);
};

inline EEmcParticleCandidate_t::EEmcParticleCandidate_t() : PID(-9999), hitIdx1(-1), E(0), M(0), PT(0) { /* */ };

#endif

/*
 * $Id: EEmcParticleCandidate.h,v 1.6 2012/06/01 21:50:12 sgliske Exp $
 * $Log: EEmcParticleCandidate.h,v $
 * Revision 1.6  2012/06/01 21:50:12  sgliske
 * Updated for overhaul of EEmcHit and EEmcCluster.  Both had dynamic arrays removed as well as
 * dependencies on StEEmcHit containers removed.  Converters between StEEmcHit containers and
 * EEmcTree containers now provided by static functions in StEEmcTreeMaker.
 *
 * Revision 1.5  2012/05/25 16:20:16  sgliske
 * ready for production (I hope)
 *
 * Revision 1.4  2012/05/24 04:33:47  sgliske
 * updates
 *
 * Revision 1.3  2012/05/23 19:58:38  sgliske
 * updates
 *
 * Revision 1.2  2012/05/22 15:37:16  sgliske
 * added StEEmcParticleCandidateMaker
 *
 * Revision 1.1  2012/05/21 21:08:15  sgliske
 * added support for candidate particles, both 1 and 2
 *
 */
@


1.6
log
@Updated for overhaul of EEmcHit and EEmcCluster.  Both had dynamic arrays removed as well as
dependencies on StEEmcHit containers removed.  Converters between StEEmcHit containers and
EEmcTree containers now provided by static functions in StEEmcTreeMaker.
@
text
@d48 1
a48 1
 * $Id: EEmcParticleCandidate.h,v 1.5 2012/05/25 16:20:16 sgliske Exp $
d50 5
@


1.5
log
@ready for production (I hope)
@
text
@d8 1
a8 1
 * members are all public, so as to faciliate directly drawing from
d48 1
a48 1
 * $Id: EEmcParticleCandidate.h,v 1.4 2012/05/24 04:33:47 sgliske Exp $
d50 3
@


1.4
log
@updates
@
text
@d34 1
a34 1
   Int_t PID, hitIdx;
d43 1
a43 1
inline EEmcParticleCandidate_t::EEmcParticleCandidate_t() : PID(-9999), hitIdx(-1), E(0), M(0), PT(0) { /* */ };
d48 1
a48 1
 * $Id: EEmcParticleCandidate.h,v 1.3 2012/05/23 19:58:38 sgliske Exp $
d50 3
@


1.3
log
@updates
@
text
@d32 2
d48 1
a48 1
 * $Id: EEmcParticleCandidate.h,v 1.2 2012/05/22 15:37:16 sgliske Exp $
d50 3
@


1.2
log
@added StEEmcParticleCandidateMaker
@
text
@d11 3
d30 1
a30 1
   EEmcParticleCandidate_t( Int_t hitIdx, const EEmcHit_t* hitPtr );
d41 1
a41 1
inline EEmcParticleCandidate_t::EEmcParticleCandidate_t() : PID(1000), hitIdx(-1), E(0), M(0), PT(0) { /* */ };
d46 1
a46 1
 * $Id: EEmcParticleCandidate.h,v 1.1 2012/05/21 21:08:15 sgliske Exp $
d48 3
@


1.1
log
@added support for candidate particles, both 1 and 2
@
text
@d14 1
a14 1
#define EEmcParticleCandidate_H_
d17 1
d20 2
d27 1
d43 5
a47 2
 * $Id: $
 * $Log: $
@

