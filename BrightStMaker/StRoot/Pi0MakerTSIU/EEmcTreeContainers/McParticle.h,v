head	1.8;
access;
symbols;
locks; strict;
comment	@ * @;


1.8
date	2012.11.26.19.37.33;	author sgliske;	state dead;
branches;
next	1.7;

1.7
date	2012.07.20.20.29.46;	author sgliske;	state Exp;
branches;
next	1.6;

1.6
date	2012.06.14.05.03.50;	author sgliske;	state Exp;
branches;
next	1.5;

1.5
date	2012.06.14.04.41.01;	author sgliske;	state Exp;
branches;
next	1.4;

1.4
date	2012.06.01.21.50.12;	author sgliske;	state Exp;
branches;
next	1.3;

1.3
date	2012.06.01.21.29.38;	author sgliske;	state Exp;
branches;
next	1.2;

1.2
date	2012.05.31.22.13.14;	author sgliske;	state Exp;
branches;
next	1.1;

1.1
date	2012.05.31.15.33.45;	author sgliske;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Moved to StRoot/StEEmcPool/EEmcTreeContainers
@
text
@/*
 * Created by S. Gliske, May 2012
 *
 * Description: McParticle_t, used in the McEEmcTree.
 *
 * Note: this class does not explicitly depend on the STAR framework,
 * and so the trees can be read outside of the STAR framework.  Note:
 * data members are all public, to allow a lighter weight implementation.
 * 
 *
 */

#ifndef McParticle_H_
#define McParticle_H_

#include <Rtypes.h>
#include <TObject.h>
#include <TVector3.h>

//
// McParticle_t
//
class McParticle_t : public TObject {
 public:
   McParticle_t();
   McParticle_t( Int_t pIdx, Int_t v1Idx, Int_t v2Idx, Long_t gPID, Long_t pPID, Float_t e, const TVector3& mom,
                 Short_t sector_, Float_t uPos_, Float_t vPos_, Float_t uE_, Float_t vE_, const TVector3& position,
                 Float_t eTow_, Float_t ePre1_, Float_t ePre2_, Float_t ePost_ );
   virtual ~McParticle_t();

   void Clear( const Option_t* );

   Int_t parentIdx;      // idx in TClonesArray of parent particle
   Int_t startVertexIdx; // idx in TClonesArray of starting vertex
   Int_t stopVertexIdx;  // idx in TClonesArray of stop (ending) vertex

   Long_t gId;           // Geant PID, copied from StMcTrack
   Long_t pId;           // PDG PID, copied from StMcTrack

   Float_t E;            // copied from StMcTrack
   TVector3 momentum;    // copied from StMcTrack

   Short_t sector;       // sector in which the most energy is deposited in the SMD
   Float_t uPos, vPos;   // energy weighted mean strip position in each layer, in the above sector
   Float_t uE, vE;       // energy in the u and v layers, in the specified sector
   TVector3 position;    // where it hits the detector, computed based on uPos, vPos.
                         // Set to 0,0,0 if doesn't hit

   Float_t eTow, ePre1, ePre2, ePost; // energy deposited in each of these layers

 private:
   ClassDef( McParticle_t, 3 );
};

// inline functions

inline McParticle_t::McParticle_t( Int_t pIdx, Int_t v1Idx, Int_t v2Idx, Long_t gPID, Long_t pPID,
                                   Float_t e, const TVector3& mom, Short_t sector_,
                                   Float_t uPos_, Float_t vPos_, Float_t uE_, Float_t vE_,
                                   const TVector3& pos,
                                   Float_t eTow_, Float_t ePre1_, Float_t ePre2_, Float_t ePost_ )
   : parentIdx(pIdx), startVertexIdx(v1Idx), stopVertexIdx(v2Idx),
     gId(gPID), pId(pPID), E(e), momentum(mom), sector(sector_),
     uPos(uPos_), vPos(vPos_), uE(uE_), vE(vE_), position(pos),
     eTow(eTow_), ePre1(ePre1_), ePre2(ePre2_), ePost(ePost_) { /* */ };

inline void McParticle_t::Clear( const Option_t* ){
   parentIdx = startVertexIdx = stopVertexIdx = -1;
   gId = pId = 0;
   E = 0;
   sector = 0;
   uPos = vPos = -1;
   uE = vE = eTow = ePre1 = ePre2 = ePost = 0;

   momentum.SetXYZ(0,0,0);
   position.SetXYZ(0,0,0);
};

#endif

/*
 * $Id: McParticle.h,v 1.7 2012/07/20 20:29:46 sgliske Exp $
 * $Log: McParticle.h,v $
 * Revision 1.7  2012/07/20 20:29:46  sgliske
 * McParticle now keeps track of energy in tower layers
 *
 * Revision 1.6  2012/06/14 05:03:50  sgliske
 * Removed TArrayS and TArrayF from EEmcSmdCluster and EEmcHit, as
 * they still contain dynamic arrays, and so things fail when using
 * TClonesArrays.  Now both use a static array.
 *
 * Revision 1.5  2012/06/14 04:41:01  sgliske
 * added sector, adjusted whitespace
 *
 * Revision 1.4  2012/06/01 21:50:12  sgliske
 * Updated for overhaul of EEmcHit and EEmcCluster.  Both had dynamic arrays removed as well as
 * dependencies on StEEmcHit containers removed.  Converters between StEEmcHit containers and
 * EEmcTree containers now provided by static functions in StEEmcTreeMaker.
 *
 * Revision 1.3  2012/06/01 21:29:38  sgliske
 * updates--now it compiles with no warnings or errors
 *
 * Revision 1.2  2012/05/31 22:13:14  sgliske
 * working on MC
 *
 * Revision 1.1  2012/05/31 15:33:45  sgliske
 * creation
 *
 *
 */
@


1.7
log
@McParticle now keeps track of energy in tower layers
@
text
@d82 1
a82 1
 * $Id: McParticle.h,v 1.6 2012/06/14 05:03:50 sgliske Exp $
d84 3
@


1.6
log
@Removed TArrayS and TArrayF from EEmcSmdCluster and EEmcHit, as
they still contain dynamic arrays, and so things fail when using
TClonesArrays.  Now both use a static array.
@
text
@d27 2
a28 1
                 Short_t sector_, Float_t uPos_, Float_t vPos_, Float_t uE_, Float_t vE_, const TVector3& position );
d49 2
d52 1
a52 1
   ClassDef( McParticle_t, 2 );
d60 6
a65 4
                                   const TVector3& pos )
                    : parentIdx(pIdx), startVertexIdx(v1Idx), stopVertexIdx(v2Idx),
                    gId(gPID), pId(pPID), E(e), momentum(mom), sector(sector_),
                    uPos(uPos_), vPos(vPos_), uE(uE_), vE(vE_), position(pos) { /* */ };
d73 1
a73 1
   uE = vE = 0;
d82 1
a82 1
 * $Id: McParticle.h,v 1.5 2012/06/14 04:41:01 sgliske Exp $
d84 5
@


1.5
log
@added sector, adjusted whitespace
@
text
@d27 1
a27 1
                 Float_t uPos_, Float_t vPos_, Float_t uE_, Float_t vE_, const TVector3& position );
d77 1
a77 1
 * $Id: McParticle.h,v 1.4 2012/06/01 21:50:12 sgliske Exp $
d79 3
@


1.4
log
@Updated for overhaul of EEmcHit and EEmcCluster.  Both had dynamic arrays removed as well as
dependencies on StEEmcHit containers removed.  Converters between StEEmcHit containers and
EEmcTree containers now provided by static functions in StEEmcTreeMaker.
@
text
@d26 2
a27 1
   McParticle_t( Int_t pIdx, Int_t v1Idx, Int_t v2Idx, Long_t gPID, Long_t pPID, Float_t e, const TVector3& mom, Float_t uPos_, Float_t vPos_, const TVector3& position );
d42 5
a46 2
   Float_t uPos, vPos;   // energy weighted mean strip position in each layer
   TVector3 position;    // where it hits the detector.  Set to 0,0,0 if doesn't hit
d49 1
a49 1
   ClassDef( McParticle_t,1 );
d54 7
a60 2
inline McParticle_t::McParticle_t( Int_t pIdx, Int_t v1Idx, Int_t v2Idx, Long_t gPID, Long_t pPID, Float_t e, const TVector3& mom, Float_t uPos_, Float_t vPos_, const TVector3& pos )
   : parentIdx(pIdx), startVertexIdx(v1Idx), stopVertexIdx(v2Idx), gId(gPID), pId(pPID), E(e), momentum(mom), uPos(uPos_), vPos(vPos_), position(pos) { /* */ };
d66 4
d77 1
a77 1
 * $Id: McParticle.h,v 1.3 2012/06/01 21:29:38 sgliske Exp $
d79 5
@


1.3
log
@updates--now it compiles with no warnings or errors
@
text
@d27 1
a27 1
   virtual virtual ~McParticle_t();
d64 1
a64 1
 * $Id: McParticle.h,v 1.2 2012/05/31 22:13:14 sgliske Exp $
d66 3
@


1.2
log
@working on MC
@
text
@d8 2
a9 2
 * data members are all public, so as to faciliate directly drawing
 * from the TTree.
d24 1
d27 1
a27 1
   virtual ~McParticle_t();
d64 1
a64 1
 * $Id: McParticle.h,v 1.1 2012/05/31 15:33:45 sgliske Exp $
d66 3
@


1.1
log
@creation
@
text
@d25 1
a25 1
   McParticle_t( Int_t pIdx, Int_t v1Idx, Int_t v2Idx, Long_t gPID, Long_t pPID, Float_t e, const TVector3& mom, const TVector3& position );
d40 1
d49 2
a50 2
inline McParticle_t::McParticle_t( Int_t pIdx, Int_t v1Idx, Int_t v2Idx, Long_t gPID, Long_t pPID, Float_t e, const TVector3& mom, const TVector3& pos )
   : parentIdx(pIdx), startVertexIdx(v1Idx), stopVertexIdx(v2Idx), gId(gPID), pId(pPID), E(e), momentum(mom), position(pos) { /* */ };
d63 5
a67 2
 * $Id: $
 * $Log: $
@

