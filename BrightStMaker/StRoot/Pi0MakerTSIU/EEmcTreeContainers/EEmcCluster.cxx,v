head	1.3;
access;
symbols;
locks; strict;
comment	@// @;


1.3
date	2012.06.01.20.56.33;	author sgliske;	state dead;
branches;
next	1.2;

1.2
date	2012.05.23.19.58.37;	author sgliske;	state Exp;
branches;
next	1.1;

1.1
date	2012.05.16.20.47.59;	author sgliske;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Moved filename from EEmcCluster to EEmcSmdCluster to match class name.
Also removed dependancy on StSimpleCluster (the converter is now part of
StEEmcTreeMaker) and removed dynamic arrays.
@
text
@/*
 * Created by S. Gliske, May 2012
 *
 * Description: see header.
 *
 */

#include "EEmcCluster.h"
#include "EEmcEnergy.h"

#include <cmath>

#include "StRoot/StEEmcPool/StEEmcHitMaker/StSimpleCluster.h"

ClassImp( EEmcSmdCluster_t );
ClassImp( EEmcClusterElement_t );


EEmcSmdCluster_t::EEmcSmdCluster_t( const EEmcEnergy_t& eemcEnergy, Short_t sector_, Bool_t inLayerV_, const StSimpleCluster_t& other )
   : sector(sector_), inLayerV(inLayerV_) {

   const TArrayS& mArr = other.getMemberArray();
   const TArrayF& wArr = other.getWeightArray();

   nStrips = mArr.GetSize();
   if( wArr.GetSize() < nStrips )
      nStrips = wArr.GetSize();

   strip = new EEmcClusterElement_t[ nStrips ];
   energy = 0;
   meanPos = 0;
   width = 0;

   for( Int_t i=0; i<nStrips; ++i ){
      Int_t idx = mArr[i];
      const EEmcElement_t& element = eemcEnergy.eSmd.sec[sector].layer[inLayerV].strip[ idx ];
      Float_t weight = wArr[i];
      Float_t stripEnergy = ( element.fail ? 0 : element.energy );

      strip[i].set( idx, stripEnergy, weight );

      Float_t temp = stripEnergy*weight;
      energy += temp;

      temp *= idx;
      meanPos += temp;

      temp *= temp;
      width += temp;
   };
   assert( energy );
   meanPos /= energy;
   width /= energy;
   width = sqrt( width - meanPos*meanPos );

   internalSeedIdx = other.getSeedIdx();
};


EEmcSmdCluster_t::EEmcSmdCluster_t() : nStrips(0) { /* */ };

EEmcSmdCluster_t::~EEmcSmdCluster_t(){
   if( nStrips )
      delete strip;
   nStrips = 0;
};

void EEmcSmdCluster_t::Clear( const Option_t* ){
   if( nStrips )
      delete strip;
   nStrips = 0;

   internalSeedIdx = -1;
   meanPos = width = energy = 0;
   sector = 0;
   inLayerV = 0;
};

/*
 * $Id: EEmcCluster.cxx,v 1.2 2012/05/23 19:58:37 sgliske Exp $
 * $Log: EEmcCluster.cxx,v $
 * Revision 1.2  2012/05/23 19:58:37  sgliske
 * updates
 *
 * Revision 1.1  2012/05/16 20:47:59  sgliske
 * moved from StEEmcTree to EEmcTreeContainers
 *
 * Revision 1.1  2012/05/15 20:52:46  sgliske
 * created more containers
 *
 *
 */
@


1.2
log
@updates
@
text
@d80 1
a80 1
 * $Id: EEmcCluster.cxx,v 1.1 2012/05/16 20:47:59 sgliske Exp $
d82 3
@


1.1
log
@moved from StEEmcTree to EEmcTreeContainers
@
text
@d36 1
a36 1
      const EEmcElement_t& element = eemcEnergy.esmd.sec[sector].layer[inLayerV].strip[ idx ];
d80 1
a80 1
 * $Id: EEmcCluster.cxx,v 1.1 2012/05/15 20:52:46 sgliske Exp $
d82 3
@

