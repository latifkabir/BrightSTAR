head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2012.06.01.20.56.36;	author sgliske;	state dead;
branches;
next	1.2;

1.2
date	2012.05.31.22.13.13;	author sgliske;	state Exp;
branches;
next	1.1;

1.1
date	2012.05.16.20.48.00;	author sgliske;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Moved filename from EEmcCluster to EEmcSmdCluster to match class name.
Also removed dependancy on StSimpleCluster (the converter is now part of
StEEmcTreeMaker) and removed dynamic arrays.
@
text
@/*
 * Created by S. Gliske, May 2012
 *
 * Description: Container used in the EEmcAnalysisTree.  Note: this does
 * not explicitly depend on the STAR framework, and so the trees can
 * be read outside of the STAR framework.  Note: data members are all
 * public, so as to faciliate directly drawing from the TTree.
 *
 */

#ifndef EEmcCluster_H_
#define EEmcCluster_H_

#include <assert.h>
#include <Rtypes.h>
#include <TObject.h>

class EEmcClusterElement_t;
class EEmcEnergy_t;
class StSimpleCluster_t;

class EEmcSmdCluster_t : public TObject {
 public:
   EEmcSmdCluster_t();
   EEmcSmdCluster_t( const EEmcEnergy_t& eemcEnergy, Short_t sector_, Bool_t inLayerV_, const StSimpleCluster_t& other );
   ~EEmcSmdCluster_t();
   void Clear( const Option_t* );

   Int_t     internalSeedIdx;
   Float_t   meanPos;
   Float_t   width;
   Float_t   energy;

   Short_t   sector;
   Bool_t    inLayerV;

   Int_t nStrips;
   EEmcClusterElement_t *strip;  //[nStrips]

 private:
   ClassDef( EEmcSmdCluster_t,1 );
};

class EEmcClusterElement_t {
 public:
   EEmcClusterElement_t( Short_t i = -1, Float_t e = 0, Float_t w = 1 );

   void set( Short_t i, Float_t e, Float_t w = 1 );

   Short_t idx;
   Float_t energy;  // already multiplied by weight--is cheaper to save energy than reference to the strip
   Float_t weight;

 private:
   ClassDef( EEmcClusterElement_t, 1 );
};

inline EEmcClusterElement_t::EEmcClusterElement_t( Short_t i, Float_t e, Float_t w ) : idx(i), energy(e*w), weight(w) { /* */ };
inline void EEmcClusterElement_t::set( Short_t i, Float_t e, Float_t w ){ idx = i; weight = w; energy = e*w; };

#endif

/*
 * $Id: EEmcCluster.h,v 1.2 2012/05/31 22:13:13 sgliske Exp $
 * $Log: EEmcCluster.h,v $
 * Revision 1.2  2012/05/31 22:13:13  sgliske
 * working on MC
 *
 * Revision 1.1  2012/05/16 20:48:00  sgliske
 * moved from StEEmcTree to EEmcTreeContainers
 *
 * Revision 1.1  2012/05/15 20:52:47  sgliske
 * created more containers
 *
 *
 */
@


1.2
log
@working on MC
@
text
@d64 1
a64 1
 * $Id: EEmcCluster.h,v 1.1 2012/05/16 20:48:00 sgliske Exp $
d66 3
@


1.1
log
@moved from StEEmcTree to EEmcTreeContainers
@
text
@d11 1
a11 1
#ifndef EEmcCluster_H__
d64 1
a64 1
 * $Id: EEmcCluster.h,v 1.1 2012/05/15 20:52:47 sgliske Exp $
d66 3
@

