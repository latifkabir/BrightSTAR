head	1.11;
access;
symbols;
locks; strict;
comment	@// @;


1.11
date	2012.11.26.19.37.32;	author sgliske;	state dead;
branches;
next	1.10;

1.10
date	2012.07.30.17.07.19;	author sgliske;	state Exp;
branches;
next	1.9;

1.9
date	2012.06.29.17.57.06;	author sgliske;	state Exp;
branches;
next	1.8;

1.8
date	2012.06.25.21.17.18;	author sgliske;	state Exp;
branches;
next	1.7;

1.7
date	2012.06.01.21.50.12;	author sgliske;	state Exp;
branches;
next	1.6;

1.6
date	2012.05.25.16.20.16;	author sgliske;	state Exp;
branches;
next	1.5;

1.5
date	2012.05.24.04.33.47;	author sgliske;	state Exp;
branches;
next	1.4;

1.4
date	2012.05.23.19.58.38;	author sgliske;	state Exp;
branches;
next	1.3;

1.3
date	2012.05.22.22.01.07;	author sgliske;	state Exp;
branches;
next	1.2;

1.2
date	2012.05.22.15.37.16;	author sgliske;	state Exp;
branches;
next	1.1;

1.1
date	2012.05.21.21.08.15;	author sgliske;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Moved to StRoot/StEEmcPool/EEmcTreeContainers
@
text
@/*
 * Created by S. Gliske, May 2012
 *
 * Description: see header.
 *
 */

// z location of the EEMC SMD layer in cm
#define SMDZ 279.542

#include "EEmcParticleCandidate.h"
#include "EEmcHit.h"

EEmcParticleCandidate_t::EEmcParticleCandidate_t( Int_t hitIdx_, const EEmcHit_t& hit, TVector3& vertex ) : 
   PID(1000), hitIdx1(hitIdx_), E(hit.eTow), M(0), PT(0),
   position( hit.x, hit.y, SMDZ ),
   momentum( (position-vertex).Unit()*E )
{
   // invalid vertex, assume vertex at the origin
   if( vertex.Z() < -300 )
      momentum = position.Unit()*E;

   // do this after above check
   PT = momentum.Perp();
};

ClassImp( EEmcParticleCandidate_t );

/*
 * $Id: EEmcParticleCandidate.cxx,v 1.10 2012/07/30 17:07:19 sgliske Exp $
 * $Log: EEmcParticleCandidate.cxx,v $
 * Revision 1.10  2012/07/30 17:07:19  sgliske
 * bug fix: set PT after vertex position check
 *
 * Revision 1.9  2012/06/29 17:57:06  sgliske
 * Updated and undoing changes for bug investigation
 *
 * Revision 1.8  2012/06/25 21:17:18  sgliske
 * Added check on valid vertex
 *
 * Revision 1.7  2012/06/01 21:50:12  sgliske
 * Updated for overhaul of EEmcHit and EEmcCluster.  Both had dynamic arrays removed as well as
 * dependencies on StEEmcHit containers removed.  Converters between StEEmcHit containers and
 * EEmcTree containers now provided by static functions in StEEmcTreeMaker.
 *
 * Revision 1.6  2012/05/25 16:20:16  sgliske
 * ready for production (I hope)
 *
 * Revision 1.5  2012/05/24 04:33:47  sgliske
 * updates
 *
 * Revision 1.4  2012/05/23 19:58:38  sgliske
 * updates
 *
 * Revision 1.3  2012/05/22 22:01:07  sgliske
 * updates
 *
 * Revision 1.2  2012/05/22 15:37:16  sgliske
 * added StEEmcParticleCandidateMaker
 *
 * Revision 1.1  2012/05/21 21:08:15  sgliske
 * added support for candidate particles, both 1 and 2
 *
 */
@


1.10
log
@bug fix: set PT after vertex position check
@
text
@d30 1
a30 1
 * $Id: EEmcParticleCandidate.cxx,v 1.9 2012/06/29 17:57:06 sgliske Exp $
d32 3
@


1.9
log
@Updated and undoing changes for bug investigation
@
text
@a18 2
   PT = momentum.Perp();

d22 3
d30 1
a30 1
 * $Id: EEmcParticleCandidate.cxx,v 1.8 2012/06/25 21:17:18 sgliske Exp $
d32 3
@


1.8
log
@Added check on valid vertex
@
text
@d22 1
a22 1
   if( vertex.Z < -300 )
d29 1
a29 1
 * $Id: EEmcParticleCandidate.cxx,v 1.7 2012/06/01 21:50:12 sgliske Exp $
d31 3
@


1.7
log
@Updated for overhaul of EEmcHit and EEmcCluster.  Both had dynamic arrays removed as well as
dependencies on StEEmcHit containers removed.  Converters between StEEmcHit containers and
EEmcTree containers now provided by static functions in StEEmcTreeMaker.
@
text
@d20 4
d29 1
a29 1
 * $Id: EEmcParticleCandidate.cxx,v 1.6 2012/05/25 16:20:16 sgliske Exp $
d31 5
@


1.6
log
@ready for production (I hope)
@
text
@d15 1
a15 1
   PID(1000), hitIdx1(hitIdx_), E(hit.total.eTow), M(0), PT(0),
d25 1
a25 1
 * $Id: EEmcParticleCandidate.cxx,v 1.5 2012/05/24 04:33:47 sgliske Exp $
d27 3
@


1.5
log
@updates
@
text
@d15 1
a15 1
   PID(1000), hitIdx(hitIdx_), E(hit.total.eTow), M(0), PT(0),
d25 1
a25 1
 * $Id: EEmcParticleCandidate.cxx,v 1.4 2012/05/23 19:58:38 sgliske Exp $
d27 3
@


1.4
log
@updates
@
text
@d14 5
a18 3
EEmcParticleCandidate_t::EEmcParticleCandidate_t( Int_t hitIdx_, const EEmcHit_t& hit, TVector3& vertex ) : PID(1000), hitIdx(hitIdx_), E(hit.total.eTow), M(0), PT(0),
                                                                                                            position( hit.x, hit.y, SMDZ ),
                                                                                                            momentum( (position-vertex).Unit()*E ) {
d25 1
a25 1
 * $Id: EEmcParticleCandidate.cxx,v 1.3 2012/05/22 22:01:07 sgliske Exp $
d27 3
@


1.3
log
@updates
@
text
@d8 3
d12 1
d14 4
a17 7
#include <iostream>
using std::cerr;
using std::endl;

EEmcParticleCandidate_t::EEmcParticleCandidate_t( Int_t hitIdx, const EEmcHit_t* hitPtr ){
   cerr << "NOT YET PROGRAMMED: EEmcParticleCandidate_t::EEmcParticleCandidate_t( Int_t hitIdx, const EEmcHit_t* hitPtr )" << endl;
   throw(0);
d23 1
a23 1
 * $Id: EEmcParticleCandidate.cxx,v 1.2 2012/05/22 15:37:16 sgliske Exp $
d25 3
@


1.2
log
@added StEEmcParticleCandidateMaker
@
text
@d10 9
d22 1
a22 1
 * $Id: EEmcParticleCandidate.cxx,v 1.1 2012/05/21 21:08:15 sgliske Exp $
d24 3
@


1.1
log
@added support for candidate particles, both 1 and 2
@
text
@d10 1
a10 1
ClassDef( EEmcParticleCandidate_t, 1);
d13 5
a17 2
 * $Id: $
 * $Log: $
@

