head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	2012.11.26.19.37.32;	author sgliske;	state dead;
branches;
next	1.5;

1.5
date	2012.06.14.05.38.50;	author sgliske;	state Exp;
branches;
next	1.4;

1.4
date	2012.06.14.05.03.50;	author sgliske;	state Exp;
branches;
next	1.3;

1.3
date	2012.06.01.22.10.48;	author sgliske;	state Exp;
branches;
next	1.2;

1.2
date	2012.06.01.21.50.12;	author sgliske;	state Exp;
branches;
next	1.1;

1.1
date	2012.06.01.20.56.28;	author sgliske;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Moved to StRoot/StEEmcPool/EEmcTreeContainers
@
text
@/*
 * Created by S. Gliske, May 2012
 *
 * Description: Container used in the EEmcAnalysisTree.  Note: this
 * class does not explicitly depend on the STAR framework, and so the
 * trees can be read outside of the STAR framework.  Note: data
 * members are all public, to allow a lighter weight implementation.
 *
 */

#ifndef EEmcSmdCluster_H_
#define EEmcSmdCluster_H_

#include <Rtypes.h>
#include <TObject.h>
#include <TArrayS.h>
#include <TArrayF.h>

class EEmcSmdCluster_t : public TObject {
 public:
   EEmcSmdCluster_t();
   virtual ~EEmcSmdCluster_t(){ /* */ };
   void Clear( const Option_t* );

   Float_t   meanPos;
   Float_t   width;
   Float_t   energy;

   Short_t   sector;
   Bool_t    inLayerV;

   enum constant_t { kMaxClusterSize = 25 };

   // to save the weights of the strips associated with the clusters.
   Short_t seedStripIdx;                     // in [0-287]
   Short_t numUsedStrips;                    // in [0-kMaxClusterSize]
   Short_t usedStripIdx[kMaxClusterSize];    // each element in [0-287]
   Float_t usedStripWeight[kMaxClusterSize]; // each element in [0-1]

 private:
   ClassDef( EEmcSmdCluster_t, 3 );
};

#endif

/*
 * $Id: EEmcSmdCluster.h,v 1.5 2012/06/14 05:38:50 sgliske Exp $
 * $Log: EEmcSmdCluster.h,v $
 * Revision 1.5  2012/06/14 05:38:50  sgliske
 * Added McParticle
 *
 * Revision 1.4  2012/06/14 05:03:50  sgliske
 * Removed TArrayS and TArrayF from EEmcSmdCluster and EEmcHit, as
 * they still contain dynamic arrays, and so things fail when using
 * TClonesArrays.  Now both use a static array.
 *
 * Revision 1.3  2012/06/01 22:10:48  sgliske
 * Updated to allow complilation with ACLiC outside of STAR framework
 *
 * Revision 1.2  2012/06/01 21:50:12  sgliske
 * Updated for overhaul of EEmcHit and EEmcCluster.  Both had dynamic arrays removed as well as
 * dependencies on StEEmcHit containers removed.  Converters between StEEmcHit containers and
 * EEmcTree containers now provided by static functions in StEEmcTreeMaker.
 *
 * Revision 1.1  2012/06/01 20:56:28  sgliske
 * Moved filename from EEmcCluster to EEmcSmdCluster to match class name.
 * Also removed dependancy on StSimpleCluster (the converter is now part of
 * StEEmcTreeMaker) and removed dynamic arrays.
 *
 *
 */
@


1.5
log
@Added McParticle
@
text
@d47 1
a47 1
 * $Id: EEmcSmdCluster.h,v 1.4 2012/06/14 05:03:50 sgliske Exp $
d49 3
@


1.4
log
@Removed TArrayS and TArrayF from EEmcSmdCluster and EEmcHit, as
they still contain dynamic arrays, and so things fail when using
TClonesArrays.  Now both use a static array.
@
text
@d35 4
a38 4
   Int_t seedStripIdx;              // in [0-288]
   Int_t firstStripIdx;             // in [0-288]
   Short_t numUsedStrips;           // in [0-kMaxClusterSize]
   Float_t weight[kMaxClusterSize]; // each element in [0-1]
d47 1
a47 1
 * $Id: EEmcSmdCluster.h,v 1.3 2012/06/01 22:10:48 sgliske Exp $
d49 5
@


1.3
log
@Updated to allow complilation with ACLiC outside of STAR framework
@
text
@d7 1
a7 2
 * members are mostly all public, to allow a lighter weight
 * implementation.
d32 1
a32 2
   // some functions for interacting with the arrays for which strips
   // were actually used by (members of) this cluster.
d34 5
a38 13
   Int_t   getNumUsedStrips();
   Int_t   getSeedStripIndex();
   Float_t getSeedStripWeight();
   Int_t   getIndexOfUsedStrip(  Int_t localIdx ); // get strip (global) index given the local index
   Float_t getWeightOfUsedStrip( Int_t localIdx ); // get strip (global) weight given the local index

   // to fill the class from an StSimpleCluster_t
   friend class StEEmcTreeMaker_t;

 protected:
   Int_t   localSeedIdx;
   TArrayS usedStripIndexArray;
   TArrayF usedStripWeightArray;
d41 1
a41 1
   ClassDef( EEmcSmdCluster_t,1 );
a43 6
inline Int_t   EEmcSmdCluster_t::getNumUsedStrips(){ return usedStripIndexArray.GetSize(); };
inline Int_t   EEmcSmdCluster_t::getSeedStripIndex() { return usedStripIndexArray.At( localSeedIdx ); };
inline Float_t EEmcSmdCluster_t::getSeedStripWeight(){ return usedStripWeightArray.At( localSeedIdx ); };
inline Int_t   EEmcSmdCluster_t::getIndexOfUsedStrip ( Int_t localIdx ){ return usedStripIndexArray.At( localIdx ); };
inline Float_t EEmcSmdCluster_t::getWeightOfUsedStrip( Int_t localIdx ){ return usedStripWeightArray.At( localIdx ); };

d47 1
a47 1
 * $Id: EEmcSmdCluster.h,v 1.2 2012/06/01 21:50:12 sgliske Exp $
d49 3
@


1.2
log
@Updated for overhaul of EEmcHit and EEmcCluster.  Both had dynamic arrays removed as well as
dependencies on StEEmcHit containers removed.  Converters between StEEmcHit containers and
EEmcTree containers now provided by static functions in StEEmcTreeMaker.
@
text
@d40 1
a40 1
   Int_t   getWeightOfUsedStrip( Int_t localIdx ); // get strip (global) weight given the local index
d58 1
a58 1
inline Int_t   EEmcSmdCluster_t::getWeightOfUsedStrip( Int_t localIdx ){ return usedStripWeightArray.At( localIdx ); };
d63 1
a63 1
 * $Id: EEmcSmdCluster.h,v 1.1 2012/06/01 20:56:28 sgliske Exp $
d65 5
@


1.1
log
@Moved filename from EEmcCluster to EEmcSmdCluster to match class name.
Also removed dependancy on StSimpleCluster (the converter is now part of
StEEmcTreeMaker) and removed dynamic arrays.
@
text
@d17 2
a25 1
   Int_t     internalSeedIdx;
d33 2
a34 2
   // some functions for interacting with the strip idx/weight arrays
   Int_t getNumStrips();
d36 2
a37 1
   Int_t getSeedStripIdx();
d39 2
a40 3

   Int_t getStripIdx( Int_t internalIdx );
   Int_t getStripWeight( Int_t internalIdx );
d43 1
a43 1
   friend class StEEmcTreeMaker;
d46 3
a48 2
   TArrayI stripIdxArray;
   TArrayF stripWeightArray;
d54 5
a58 7
inline Int_t   EEmcSmdCluster_t::getNumStrips(){ return stripIdxArray.GetSize(); };

inline Int_t   EEmcSmdCluster_t::getSeedStripIdx()   { return    stripIdxArray.At( internalSeedIdx ); };
inline Float_t EEmcSmdCluster_t::getSeedStripWeight(){ return stripWeightArray.At( internalSeedIdx ); };

inline Int_t   EEmcSmdCluster_t::getStripIdx( Int_t internalIdx )   { return    stripIdxArray.At( internalIdx ); };
inline Int_t   EEmcSmdCluster_t::getStripWeight( Int_t internalIdx ){ return stripWeightArray.At( internalSeedIdx ); };
d63 7
a69 2
 * $Id: $
 * $Log: $
@

