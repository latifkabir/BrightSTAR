head	1.7;
access;
symbols;
locks; strict;
comment	@ * @;


1.7
date	2012.11.26.19.37.32;	author sgliske;	state dead;
branches;
next	1.6;

1.6
date	2012.06.19.15.04.10;	author sgliske;	state Exp;
branches;
next	1.5;

1.5
date	2012.06.01.21.50.11;	author sgliske;	state Exp;
branches;
next	1.4;

1.4
date	2012.05.25.16.20.15;	author sgliske;	state Exp;
branches;
next	1.3;

1.3
date	2012.05.23.19.58.37;	author sgliske;	state Exp;
branches;
next	1.2;

1.2
date	2012.05.22.15.37.16;	author sgliske;	state Exp;
branches;
next	1.1;

1.1
date	2012.05.21.21.08.15;	author sgliske;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Moved to StRoot/StEEmcPool/EEmcTreeContainers
@
text
@/*
 * Created by S. Gliske, May 2012
 *
 * Description: Container used in the EEmcAnalysisTree.  Represents a
 * candidate parent particle, which decays (decayed) into two
 * candidate particles.
 *
 * Note: this does not explicitly depend on the STAR framework, and so
 * the trees can be read outside of the STAR framework.  Note: data
 * members are all public, to allow a lighter weight implementation. from
 * the TTree.
 *
 */

#ifndef EEmc2ParticleCandidate_H__
#define EEmc2ParticleCandidate_H__

#include <Rtypes.h>
#include "EEmcParticleCandidate.h"

class EEmc2ParticleCandidate_t : public EEmcParticleCandidate_t {

 public:
   // constructor
   EEmc2ParticleCandidate_t();
   EEmc2ParticleCandidate_t( const EEmcParticleCandidate_t& childA, const EEmcParticleCandidate_t& childB );

   Int_t hitIdx2;
   Float_t Z, D;

 private:
   ClassDef( EEmc2ParticleCandidate_t, 2);
};

inline EEmc2ParticleCandidate_t::EEmc2ParticleCandidate_t() : EEmcParticleCandidate_t(), hitIdx2(hitIdx1) { /* */ };

#endif

/*
 * $Id: EEmc2ParticleCandidate.h,v 1.6 2012/06/19 15:04:10 sgliske Exp $
 * $Log: EEmc2ParticleCandidate.h,v $
 * Revision 1.6  2012/06/19 15:04:10  sgliske
 * updates
 *
 * Revision 1.5  2012/06/01 21:50:11  sgliske
 * Updated for overhaul of EEmcHit and EEmcCluster.  Both had dynamic arrays removed as well as
 * dependencies on StEEmcHit containers removed.  Converters between StEEmcHit containers and
 * EEmcTree containers now provided by static functions in StEEmcTreeMaker.
 *
 * Revision 1.4  2012/05/25 16:20:15  sgliske
 * ready for production (I hope)
 *
 * Revision 1.3  2012/05/23 19:58:37  sgliske
 * updates
 *
 * Revision 1.2  2012/05/22 15:37:16  sgliske
 * added StEEmcParticleCandidateMaker
 *
 * Revision 1.1  2012/05/21 21:08:15  sgliske
 * added support for candidate particles, both 1 and 2
 *
 */
@


1.6
log
@updates
@
text
@d40 1
a40 1
 * $Id: EEmc2ParticleCandidate.h,v 1.5 2012/06/01 21:50:11 sgliske Exp $
d42 3
@


1.5
log
@Updated for overhaul of EEmcHit and EEmcCluster.  Both had dynamic arrays removed as well as
dependencies on StEEmcHit containers removed.  Converters between StEEmcHit containers and
EEmcTree containers now provided by static functions in StEEmcTreeMaker.
@
text
@d29 1
a29 1
   Float_t Z;
d32 1
a32 1
   ClassDef( EEmc2ParticleCandidate_t, 1);
d40 1
a40 1
 * $Id: EEmc2ParticleCandidate.h,v 1.4 2012/05/25 16:20:15 sgliske Exp $
d42 5
@


1.4
log
@ready for production (I hope)
@
text
@d10 1
a10 1
 * members are all public, so as to faciliate directly drawing from
d40 1
a40 1
 * $Id: EEmc2ParticleCandidate.h,v 1.3 2012/05/23 19:58:37 sgliske Exp $
d42 3
@


1.3
log
@updates
@
text
@d35 1
a35 1
inline EEmc2ParticleCandidate_t::EEmc2ParticleCandidate_t() : EEmcParticleCandidate_t(), hitIdx2(hitIdx) { /* */ };
d40 1
a40 1
 * $Id: EEmc2ParticleCandidate.h,v 1.2 2012/05/22 15:37:16 sgliske Exp $
d42 3
@


1.2
log
@added StEEmcParticleCandidateMaker
@
text
@d26 1
a26 1
   EEmc2ParticleCandidate_t( Int_t hitIdx1, const EEmcHit_t* hitPtr1, Int_t hitIdx2, const EEmcHit_t* hitPtr2  );
d29 1
d40 1
a40 1
 * $Id: EEmc2ParticleCandidate.h,v 1.1 2012/05/21 21:08:15 sgliske Exp $
d42 3
@


1.1
log
@added support for candidate particles, both 1 and 2
@
text
@d16 1
a16 1
#define EEmc2ParticleCandidate_H_
d19 1
a19 1
#include <TVector3.h>
d26 1
d34 1
a34 1
inline EEmc2ParticleCandidate_t::EEmc2ParticleCandidate_t() : EEmcParticleCandidate_t(), hitIdx2(hitIdx1) { /* */ };
d39 5
a43 2
 * $Id: $
 * $Log: $
@

